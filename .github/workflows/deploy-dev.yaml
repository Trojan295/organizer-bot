on:
  push:
    branches:
      - "main"

jobs:
  build-docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    env:
      SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build image
        run: |
          ./hack/docker.sh build
      - name: Push image
        run: |
          ./hack/docker.sh push

  deploy-bot :
    name: Deploy bot
    runs-on: ubuntu-latest
    needs: [build-docker]
    env:
      SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      SCW_DEFAULT_ORGANIZATION_ID: "${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}"
      SCW_K8S_CLUSTER_ID: "${{ secrets.SCW_K8S_CLUSTER_ID }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install scw
        run: |
          sudo curl -o /usr/local/bin/scw -L "https://github.com/scaleway/scaleway-cli/releases/download/v2.3.1/scw-2.3.1-linux-x86_64"
          sudo chmod +x /usr/local/bin/scw
      - name: Configure kubeconfig
        run: |
          mkdir -p "$HOME/.kube"
          scw k8s kubeconfig get "${SCW_K8S_CLUSTER_ID}" > "$HOME/.kube/config"
          chmod 400 $HOME/.kube/config
      - name: Deploy Helm release
        run: |
          ./hack/deploy.sh dev

  discordNotification:
    name: Send Discord notification
    runs-on: ubuntu-latest
    needs: [build-docker, deploy-bot]
    if: failure()
    steps:
      - name: Discord notification
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'ðŸš¨ Deployment to dev environment failed!'
      - name: Send event to Discord
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
